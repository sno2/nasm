name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: mlugg/setup-zig@v2
        with:
          version: latest

      - name: Check Formatting
        run: zig fmt --ast-check --check .

      - run: zig build -Dtarget=x86_64-windows-gnu
      - run: zig build -Dtarget=x86_64-windows-gnu -Doptimize=ReleaseFast
      - run: zig build -Dtarget=aarch64-windows-gnu
      - run: zig build -Dtarget=x86-windows-gnu
      - run: zig build -Dtarget=x86_64-macos-none
      - run: zig build -Dtarget=aarch64-macos-none
      - run: zig build -Dtarget=aarch64-macos-none -Doptimize=ReleaseFast
      - run: zig build -Dtarget=x86_64-linux-musl
      - run: zig build -Dtarget=x86_64-linux-musl -Doptimize=ReleaseFast
      - run: zig build -Dtarget=aarch64-linux-musl
      - run: zig build -Dtarget=arm-linux-musleabihf
      - run: zig build -Dtarget=riscv64-linux-musl
      - run: zig build -Dtarget=powerpc64le-linux-musl
      - run: zig build -Dtarget=x86-linux-musl
      - run: zig build -Dtarget=loongarch64-linux-musl
      - run: zig build -Dtarget=s390x-linux-musl
      - run: zig build -Dtarget=wasm32-wasi -Doptimize=ReleaseFast # ubsan rt fails to build in Debug
      - run: zig build -Dtarget=x86_64-linux-gnu
      - run: zig build -Dtarget=x86-linux-gnu
      - run: zig build -Dtarget=aarch64-linux-gnu
      - run: zig build -Dtarget=x86_64-freebsd-none
      - run: zig build -Dtarget=aarch64-freebsd-none
      - run: zig build -Dtarget=x86_64-netbsd-none
      - run: zig build -Dtarget=aarch64-netbsd-none

  test:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: mlugg/setup-zig@v2
        with:
          version: latest

      - name: Install Wine
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo dpkg --add-architecture i386
          sudo mkdir -pm755 /etc/apt/keyrings
          sudo wget -O /etc/apt/keyrings/winehq-archive.key https://dl.winehq.org/wine-builds/winehq.key
          sudo wget -NP /etc/apt/sources.list.d/ https://dl.winehq.org/wine-builds/ubuntu/dists/$(lsb_release -cs)/winehq-$(lsb_release -cs).sources
          sudo apt -qq update
          sudo apt -qq install --install-recommends winehq-stable -y
          wine --version

      - name: Test
        if: matrix.os == 'ubuntu-latest'
        run: zig build test -fwine

      - name: Test (sanitize_thread)
        if: matrix.os == 'ubuntu-latest'
        run: zig build test -Dsanitize_thread -fwine

      - name: Test
        if: matrix.os != 'ubuntu-latest'
        # this will only assemble the files on macos
        run: zig build test
